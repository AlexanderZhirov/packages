diff --git a/gdk/wayland/cursor/wayland-cursor.c b/gdk/wayland/cursor/wayland-cursor.c
index 7f81a8a57db3a6a9b06c10732328f4713fb756fb..309322c6d10b18f8724e7c43db5d730fe4b15be2 100644
--- a/gdk/wayland/cursor/wayland-cursor.c
+++ b/gdk/wayland/cursor/wayland-cursor.c
@@ -230,8 +230,9 @@ wl_cursor_create_from_xcursor_images(struct wl_cursor_theme *theme,
             return NULL;
           }
 
-        if (images->images[0]->width != load_size ||
-            images->images[0]->height != load_size)
+        if (images->images[0]->size != load_size ||
+            images->images[0]->width % scale != 0 ||
+            images->images[0]->height % scale != 0)
           {
 	        xcursor_images_destroy (images);
                 images = xcursor_load_images (path, size);
@@ -265,6 +266,7 @@ wl_cursor_create_from_xcursor_images(struct wl_cursor_theme *theme,
 		image->theme = theme;
 		image->buffer = NULL;
 
+		image->image.size = images->images[i]->size * load_scale;
 		image->image.width = images->images[i]->width * load_scale;
 		image->image.height = images->images[i]->height * load_scale;
 		image->image.hotspot_x = images->images[i]->xhot * load_scale;
diff --git a/gdk/wayland/cursor/wayland-cursor.h b/gdk/wayland/cursor/wayland-cursor.h
index 72c7006c4b5ede5d9a8efcaff65f522af1587411..0bec095b93a733182e81d151678c9e3437e45fb5 100644
--- a/gdk/wayland/cursor/wayland-cursor.h
+++ b/gdk/wayland/cursor/wayland-cursor.h
@@ -36,6 +36,7 @@ struct wl_buffer;
 struct wl_shm;
 
 struct wl_cursor_image {
+	uint32_t size;		/* nominal size */
 	uint32_t width;		/* actual width */
 	uint32_t height;	/* actual height */
 	uint32_t hotspot_x;	/* hot spot x (must be inside image) */
diff --git a/gdk/wayland/gdkcursor-wayland.c b/gdk/wayland/gdkcursor-wayland.c
index 9f3a6259e1e582cc5eb25287cd36f450b2616014..50b11ae957a157b877af536dc8ec57b1d35d0287 100644
--- a/gdk/wayland/gdkcursor-wayland.c
+++ b/gdk/wayland/gdkcursor-wayland.c
@@ -199,16 +199,17 @@ _gdk_wayland_cursor_get_buffer (GdkWaylandDisplay *display,
 
           image = c->images[image_index];
 
-          *width = display->cursor_theme_size;
-          *height = display->cursor_theme_size;
-          *scale = image->width / (double) *width;
+          *scale = image->size / (double) display->cursor_theme_size;
+          *width = image->width / scale_factor;
+          *height = image->height / scale_factor;
           *hotspot_x = image->hotspot_x / scale_factor;
           *hotspot_y = image->hotspot_y / scale_factor;
 
-          if (*scale != scale_factor && !use_viewporter)
+          if (image->size != display->cursor_theme_size * scale_factor && !use_viewporter)
             {
-              g_warning (G_STRLOC " cursor image size (%d) not an integer "
-                         "multiple of theme size (%d)", image->width, *width);
+              g_warning (G_STRLOC " cursor image size (%d) is not equal to "
+                         "theme size (%d) x scale factor (%d)", image->size,
+                         display->cursor_theme_size, scale_factor);
               *width = image->width;
               *height = image->height;
               *hotspot_x = image->hotspot_x;
